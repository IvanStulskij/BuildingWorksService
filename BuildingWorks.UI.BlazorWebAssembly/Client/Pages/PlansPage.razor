@page "/plans"
@using BuildingWorks.Common.GlobalConstants;
@using BuildingWorks.Models.Overview
@using BuildingWorks.UI.BlazorWebAssembly.Client.Services.Interfaces
@inject HttpClient Http
@inject IPlanService service;
@inject NavigationManager NavigationManager;

<h1>Plans</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (plans == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Object</th>
                <th>Complete time</th>
                <th>Cost</th>
                <th>Is completed</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var plan in plans)
            {
                <tr>
                    <td>@plan.ObjectName</td>
                    <td>@plan.CompleteTime</td>
                    <td>@plan.Cost</td>
                    <td>@plan.IsCompleted</td>
                    <td><a @onclick="() => MoveToUpdatedForm(plan.Id)">fdfdfdfdfd</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PlanOverview>? plans;

    protected override async Task OnInitializedAsync()
    {
        plans = (await service.GetAllOverview(new Models.PaginationParameters
            {
                CurrentPage = 1,
                EntitiesPerPage = PaginationConstants.EntitesPerPage,
            })).ToList();
    }

    private async Task Delete(int id)
    {
        await service.Delete(id);
        plans?.Remove(plans.First(x => x.Id == id));
    }

    private void MoveToUpdatedForm(int buildingObjectId)
    {
        NavigationManager.NavigateTo($"/buildingObjects/create/{buildingObjectId}");
    }
}
